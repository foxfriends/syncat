import "../colours.syncat";

attribute {
  color: $meta;
  dim: true;
}

type_identifier,
call_expression > simple_identifier & /[A-Z].*/,
{
  color: $type;
}

"import",
"class",
"struct",
"enum",
"extension",
"protocol",
"var",
"let",
"func",
"guard",
"if",
"else",
"switch",
"case",
"in",
"unowned",
"weak",
for_statement > "for",
"while",
"do",
{
  color: $keyword;
}

"==", "!=", "<", ">", "<=", ">=",
"!", "&&", "||",
"+", "-", "*", "/", "|", "&", "^", "~", "%",
"=", "+=", "-=", "*=", "/=", "|=", "&=", "^=", "%=", "++", "--",
"->", "...", "?", "??", "\\", "_" {
  color: $operator;
}

parameter > simple_identifier + simple_identifier,
class_body > property_declaration > pattern > simple_identifier {
  color: $variable;
}

call_expression > simple_identifier,
function_declaration > simple_identifier,
parameter > simple_identifier,
{
  color: $function;
}

integer_literal,
real_literal,
"nil", true, false {
  color: $value;
}

line_string_literal > "\\(",
line_string_literal > ")" {
  color: $interpolation;
}

"self" {
  color: $name;
}

line_string_literal {
  color: $string;
}

comment {
  color: $comment;
}
