import "../colours.syncat";

"module", "import", "hiding", "qualified", "as", "where", 
"let", "in", "type", "newtype", "data", "deriving", "class", "instance",
"case", "of", "otherwise", "do", "if", "then", "else"
{
    color: $keyword;
}

"return", "pure", "fmap", "print", "putStrLn", "show", "read", "getLine", "getChar", "putChar" {
    color: $builtin;
}

variable_symbol, wildcard, "->", "=", "=>", annotation, "<-", lambda_head "\\", "::"
{
    color: $operator;
}

module_identifier {
    color: $name;
}

function_declaration > !* + variable_identifier,
function_application > !* + variable_identifier,
type_signature > variable_identifier,
signature > variable, {
    color: $function;
}

type_variable_identifier { color: $variable; }
type_class_identifier { color: $type; }

type_constructor_identifier,
constructor_identifier,
type,
{
    color: $type;
}

unit_constructor, list_expression > "[", list_expression > "]" { color: $keyword; }
string { color: $string; }
integer, float, char { color: $value; }
comment { color: $comment; }
